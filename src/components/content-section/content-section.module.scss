@use "../../styles/variables.module";

@keyframes mailbox-translate {
  0% { transform: translateY(0) rotate(0deg); }
  10% { transform: translateY(3px) rotate(0deg); }
  20% { transform: translateY(0) rotate(0deg); }
}

@keyframes mailbox-rotate {
  0% { transform: translateY(0) rotate(0deg); }
  10% { transform: translateY(3px) rotate(0deg); }
  20% { transform: translateY(0) rotate(0deg); }
  30% { transform: translateY(0) rotate(-2deg); }
  40% { transform: translateY(0) rotate(2deg); }
  50% { transform: translateY(0) rotate(-1deg); }
  60% { transform: translateY(0) rotate(1deg); }
  70% { transform: translateY(0) rotate(0deg); }
  100% { transform: translateY(0) rotate(0deg); }
}

.mailboxTranslate {
  animation: mailbox-translate 1s forwards;
  transform-origin: center bottom;
}

.mailboxRotate {
  animation: mailbox-rotate 1s forwards;
  transform-origin: center bottom;
}

@keyframes hand-wave {
  0% { transform: rotate(0deg); }
  10% { transform: rotate(14deg); }
  20% { transform: rotate(-8deg); }
  30% { transform: rotate(14deg); }
  40% { transform: rotate(-4deg); }
  50% { transform: rotate(10deg); }
  60% { transform: rotate(0deg); }
  100% { transform: rotate(0deg); }
}

.handWave {
  animation: hand-wave 2s forwards;
  transform-origin: 70% 70%;
}

.section {
  background-color: variables.$body-color-section;
  border-radius: 0.15em 0.15em 0 0;
  box-shadow: variables.$section-box-shadow;
  font-family: variables.$body-font-family;
  margin: 0 auto;
  max-width: 100%;
  opacity: 1;
  transform: scale(1);
  transition: transform variables.$section-transition-duration-initialize, opacity variables.$section-transition-duration-initialize;
  width: 50em;

  &.hidden {
    opacity: 0;
    pointer-events: none;
    transform: scale(0.95);
  }
}

.article {
  align-items: center;
  display: flex;
  justify-content: center;
  padding: 1.125em 2.25em;
  opacity: 1;
  transform: scale(1);
  transition: opacity variables.$section-article-transition-duration-initialize, transform variables.$section-article-transition-duration-initialize;

  a {
    display: inline-block;
    background: #131313;
    border-radius: .15em;
    color: variables.$body-color-link;
    font-size: 0.85em;
    padding: 0.1em 0.25em;
    text-decoration: none;

    &:hover {
      animation: push 0.125s steps(1);
    }

    &:active {
      transform: translateY(0.1em)
    }
  }

  &.hidden {
    opacity: 0;
    pointer-events: none;
    transform: scale(0.95);
  }

  &:first-of-type {
    padding-top: 2.25em;
  }

  &:last-of-type {
    padding-bottom: 2.25em;
  }

  > img,
  > svg {
    background-color: #18191a;
    border-radius: 100%;
    border: 0.35em solid #18191a;
    box-sizing: border-box;
    height: 8em;
    margin-right: 1.125em;
    min-height: 8em;
    min-width: 8em;
    pointer-events: none;
    width: 8em;
  }

  > p {
    font-size: 1.5em;
    margin: 0 0 0 1.125em;
    width: 100%;

    img,
    svg {
      height: 1.125em;
      margin: 0 0.05em;
      pointer-events: none;
      vertical-align: top;
      width: 1.125em;
    }
  }
}

.footer {
  height: 4em;
  display: flex;
  flex-wrap: wrap;

  a:hover {
    text-decoration: none;
  }

  a,
  button {
    align-items: center;
    background-color: variables.$code-window-footer-button-color;
    border: none;
    color: variables.$body-color-text;
    cursor: pointer;
    display: flex;
    flex-grow: 1;
    font-family: variables.$body-font-family;
    font-size: 1.5em;
    height: 100%;
    justify-content: center;
    margin: 0;
    min-width: 50%;
    overflow: hidden;
    text-decoration: none;
    text-overflow: ellipsis;
    white-space: nowrap;

    &:active {
      transform: translateY(variables.$code-window-footer-translate-amount-click-depress);
    }

    &:hover {
      animation: push 0.125s steps(1);
      background-color: variables.$code-window-footer-button-color-hover;
    }

    svg {
      fill: variables.$body-color-text;
      height: 1em;
      margin-right: 0.5em;
      width: 1em;
    }
  }
}

@keyframes push {
  from {
    transform: translateY(-0.5 * variables.$code-line-translate-amount-click-depress);
  }

  to {
    transform: translateY(0);
  }
}

// .pushed {
//   animation: push .05s steps(1);
// }